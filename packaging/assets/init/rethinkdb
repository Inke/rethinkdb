#!/bin/sh
# Copyright 2012 RethinkDB.
# Portions from Frank Trampe and Novell used with permission.

# This file targets Ubuntu and is not in line with the Linux specification. Move runlevel 2 from Default-Start to Default-Stop for compliance.

### BEGIN INIT INFO
# Provides:          rethinkdb
# Required-Start: $remote_fs 
# Required-Stop: $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: This starts a set of rethinkdb server instances.
# Description:       This looks in /etc/rethinkdb/instancds.d for rethinkdb config files and launches, stops, or examines each instance described there.
### END INIT INFO

itask="$1"

rtdbbin=/usr/bin/rethinkdb ;
rtdbconfigdir=/etc/rethinkdb ;

if [ "$itask" = "" ] ;
then
	echo "Usage: /etc/init.d/rethinkdb COMMAND" ;
else
	# We check for active configurations .
	if [ -e "$rtdbconfigdir"/instances.d/*.conf ] ;
	then
		for rtdbconffile in "$rtdbconfigdir"/instances.d/*.conf ;
		do
			# We check for instructions about which user and group ought to run the service .
			runuser="" ;
			rungroup="" ;
			if [ -e "$rtdbconffile" ] ;
			then
				runuser="`cat "$rtdbconffile" | grep '^[ \t]*runuser[ \t]*\=' | head -n 1 | sed -e 's/^\([ \ta-zA-Z0-9]\|[-]\)*\=[ \t]*//g'`" ;
				rungroup="`cat "$rtdbconffile" | grep '^[ \t]*rungroup[ \t]*\=' | head -n 1 | sed -e 's/^\([ \ta-zA-Z0-9]\|[-]\)*\=[ \t]*//g'`" ;
			fi ;
			useropt="" ;
			if [ "$runuser" != "" ] ;
			then
				useropt="--chuid" ;
			fi ;
			groupopt="" ;
			if [ "$runuser" != "" ] ;
			then
				groupopt="--group" ;
			fi ;
			# We seek the pid-file .
			rtdbpidfile="`cat "$rtdbconffile" | grep '^[ \t]*pid-file[ \t]*\=' | head -n 1 | sed -e 's/^\([ \ta-zA-Z0-9]\|[-]\)*\=[ \t]*//g'`" ;
			if [ "$itask" = "stop" ] || [ "$itask" = "restart" ] || [ "$itask" = "reload" ] || [ "$itask" = "force-reload" ] ;
			then
				if [ ! -e "$rtdbpidfile" ] ;
				then
					echo "rethinkdb:""$rtdbconffile"": No pid file." ;
				fi ;
				start-stop-daemon --stop --pidfile "$rtdbpidfile" --signal INT "$useropt" "$runuser" "$groupopt" "$rungroup" ;
			fi ;
			if [ "$itask" = "start" ] || [ "$itask" = "restart" ] || [ "$itask" = "reload" ] || [ "$itask" = "force-reload" ] ;
			then
				if [ -e /var/run ] && [ "`echo "$rtdbpidfile" | grep '^/var/run'`" != "" ] ;
				then
					mkdir -p "`dirname "$rtdbpidfile"`" ;
				fi ;
				if [ -e "$rtdbpidfile" ] ;
				then
					echo "rethinkdb:""$rtdbconffile"": pid file exists." ;
				fi ;
				start-stop-daemon --start --pidfile "$rtdbpidfile" "$useropt" "$runuser" "$groupopt" "$rungroup" --startas "$rtdbbin" --background -- --config-file="$rtdbconffile" ;
			fi ;
			if [ "$itask" = "status" ] ;
			then
				if [ -e "$rtdbpidfile" ] ;
				then
					if [ "`ps -Af | awk 'BEGIN { inited = 0 ; pidpos = 0 ; } { if ( inited == 0 ) { count1 = 0 ; while ( count1 < NF ) { count1 ++ ; if ( $count1 ~ /^[Pp][Ii][Dd]$/ ) { pidpos = count1 ; inited = 1 ; } } } else { printf "%s\n" , $pidpos ; } }' | grep '^'"\`cat \"$rtdbpidfile\"\`"'$'`" = "" ] ;
					then
						echo "rethinkdb:""$rtdbconffile"" stop/crashed" ;
					else
						echo "rethinkdb:""$rtdbconffile"" start/running, pid `cat $rtdbpidfile | grep '^[0-9]*$'`" ;
					fi ;
				else
					echo "rethinkdb:""$rtdbconffile"" stop/waiting" ;
				fi ;
			fi ;
		done ;
	else ;
		echo "rethinkdb: 0 instances in ""$rtdbconfigdir""/instances.d" ;
	fi ;
fi ;
